---
apiVersion: v1
kind: ConfigMap
metadata:
  name: online-config
  namespace: {{ .Values.namespace }}
data:
  Rocket.toml: |-
    [default]

    [default.databases.redis_pool]
    url = "redis://{{ .Values.redis.serviceName }}.{{ .Values.namespace }}.svc.cluster.local:6379"

    [debug]
    secret_key="{{ .Values.online.rocketSecretKey.debug }}"

    [release]
    address = "0.0.0.0"
    port = 80
    secret_key="{{ .Values.online.rocketSecretKey.release }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: online
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: online
  template:
    metadata:
      labels:
        app: online
    spec:
      containers:
      - name: online
        image: {{ .Values.online.image }}
        {{- if .Values.debug.pods.alwaysPullContainers }}
        imagePullPolicy: Always
        {{- end }}
        {{- if .Values.debug.pods.sleepInfinity }}
        command: ["/bin/sh"]
        args: ["-c", "chmod +x /app/online; /app/online; sleep Infinity;"]
        {{- end }}
        readinessProbe:
          httpGet:
            path: /keepalive
            port: http
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /keepalive
            port: http
          periodSeconds: 60
          failureThreshold: 2
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: online-config
          mountPath: /app/Rocket.toml
          subPath: Rocket.toml
          readOnly: true
      volumes:
      - name: online-config
        configMap:
          name: online-config
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.online.serviceName }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: online
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http