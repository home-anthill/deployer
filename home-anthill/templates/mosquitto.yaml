---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-config
  namespace: {{ .Values.namespace }}
data:
  mosquitto.conf: |-
    persistence true
    persistence_location /mosquitto/data
    allow_anonymous true
    connection_messages true
    log_type all

    {{- if .Values.domains.mqtt.ssl.enable }}
    # secure connection are available externally
    listener 8883
    # taken from https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-the-mosquitto-mqtt-messaging-broker-on-ubuntu-18-04
    # I need to copy let's encrypt files to another destination to be able
    # to set right owner and permissions
    certfile /etc/mosquitto/certs/cert.pem
    cafile /etc/mosquitto/certs/chain.pem
    keyfile /etc/mosquitto/certs/privkey.pem
    {{- else }}
    # insecure connections via 1883 disabled
    listener 1883
    {{- end }}

    {{- if .Values.mosquitto.auth.enable }}
    password_file /etc/mosquitto/password_file
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mosquitto
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      initContainers:
        - name: init-certs
          image: alpine
          command: 
            - "/bin/sh"
            - "-c"
            - |
              echo "copying certificates from certmanager"
              cp "/etc/tls/cert-issuer-mqtt/tls.crt" /etc/mosquitto/certs/cert.pem
              cp "/etc/tls/cert-issuer-mqtt/tls.key" /etc/mosquitto/certs/privkey.pem

              {{- if eq "prod" .Values.letsencrypt.server.env  }}
              cp "/etc/ssl/certs/ca-certificates.crt" /etc/mosquitto/certs/chain.pem
              {{- else }}
              cp "/etc/tls/cert-issuer-mqtt/tls.crt" /etc/mosquitto/certs/chain.pem
              {{- end }}
          volumeMounts:
            - name: mosquitto-certs
              mountPath: /etc/mosquitto/certs/
            - name: certmqtt
              mountPath: /etc/tls/cert-issuer-mqtt
      containers:
      - name: mosquitto
        image: {{ .Values.mosquitto.image }}
        imagePullPolicy: Always
        readinessProbe:
          exec:
            command:
            - mosquitto_pub
            - -h
            - localhost
            - -p
            - "{{ .Values.domains.mqtt.ssl.enable | ternary 8883 1883 }}"
            - -u
            - "{{ .Values.mosquitto.auth.username }}"
            - -P
            - "{{ .Values.mosquitto.auth.password }}"
            - -m
            - "readiness_probe"
            - -t
            - readiness
            - --insecure
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - mosquitto_pub
            - -h
            - localhost
            - -p
            - "{{ .Values.domains.mqtt.ssl.enable | ternary 8883 1883 }}"
            - -u
            - "{{ .Values.mosquitto.auth.username }}"
            - -P
            - "{{ .Values.mosquitto.auth.password }}"
            - -m
            - "readiness_probe"
            - -t
            - readiness
            - --insecure
          periodSeconds: 60
        env:
        {{ if .Values.domains.mqtt.ssl.enable }}
        - name: MOSQUITTO_SSL_ENABLE
          value: "true"
        {{- end }}
        {{- if .Values.mosquitto.auth.enable }}
        - name: MOSQUITTO_USERNAME
          value: {{ .Values.mosquitto.auth.username }}
        - name: MOSQUITTO_PASSWORD
          value: {{ .Values.mosquitto.auth.password }}
        {{- end }}
        ports:
        - name: {{ .Values.domains.mqtt.ssl.enable | ternary "mqtts" "mqtt" }}
          containerPort: {{ .Values.domains.mqtt.ssl.enable | ternary 8883 1883 }}
          protocol: TCP
        volumeMounts:
          - name: data
            mountPath: "/mosquitto/data"
          - name: mosquitto-config
            mountPath: /mosquitto/config/mosquitto.conf
            subPath: mosquitto.conf
            readOnly: true
          - name: mosquitto-certs
            mountPath: /etc/mosquitto/certs/
        lifecycle:
          postStart:
            exec:
              command: 
                - "/bin/sh"
                - "-c"
                - |
                  echo "setting certificates ownership to Mosquitto"
                  chown mosquitto: /etc/mosquitto/certs/cert.pem /etc/mosquitto/certs/chain.pem /etc/mosquitto/certs/privkey.pem

                  echo "ensuring permissions as restrictive"
                  chmod 0600 /etc/mosquitto/certs/cert.pem /etc/mosquitto/certs/chain.pem /etc/mosquitto/certs/privkey.pem
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mosquitto-data-claim
        - name: mosquitto-config
          configMap:
            name: mosquitto-config
        - name: certmqtt
          secret:
            secretName: mqtt-tls
        - name: mosquitto-certs
          emptyDir: {}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.mosquitto.serviceName }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: mosquitto
  ports:
    {{- if .Values.domains.mqtt.ssl.enable }}
    # expose mqtts port
    - name: mqtts
      protocol: TCP
      port: 8883
      targetPort: mqtts
    {{- else }}
    # expose mqtt port
    - name: mqtt
      protocol: TCP
      port: 1883
      targetPort: mqtt
    {{- end }}