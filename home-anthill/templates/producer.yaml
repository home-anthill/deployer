---
apiVersion: v1
kind: ConfigMap
metadata:
  name: producer-config
  namespace: {{ .Values.namespace }}
data:
  .env: |-
    AMQP_URI=amqp://{{ .Values.rabbitmq.user }}:{{ .Values.rabbitmq.password }}@rabbitmq.{{ .Values.namespace }}.svc.cluster.local:5672
    AMQP_QUEUE_NAME=ks89
    {{- if .Values.domains.mqtt.ssl.enable }}
    MQTT_URL={{ .Values.domains.mqtt.name }}
    MQTT_PORT=8883
    MQTT_TLS=true
    {{- if eq "prod" .Values.letsencrypt.server.env  }}
    ROOT_CA=/etc/ssl/certs/ISRG_Root_X1.pem
    {{ else }}
    ROOT_CA=/tls-cert/tls.crt
    {{ end -}}
    MQTT_CERT_FILE=/tls-cert/tls.crt
    MQTT_KEY_FILE=/tls-cert/tls.key
    {{ else }}
    MQTT_URL={{ .Values.mosquitto.serviceName }}.{{ .Values.namespace }}.svc.cluster.local
    MQTT_PORT=1883
    MQTT_TLS=false
    ROOT_CA=
    MQTT_CERT_FILE=
    MQTT_KEY_FILE=
    {{ end -}}
    MQTT_CLIENT_ID=producer
    {{- if .Values.mosquitto.auth.enable }}
    MQTT_AUTH=true
    MQTT_USER={{ .Values.mosquitto.auth.username }}
    MQTT_PASSWORD={{ .Values.mosquitto.auth.password }}
    {{ else }}
    MQTT_AUTH=false
    MQTT_USER=
    MQTT_PASSWORD=
    {{ end }}
  # log4rs.yaml: |-
  #   appenders:
  #     stdout:
  #       kind: console
  #     app:
  #       kind: rolling_file
  #       path: logs/app.log
  #       encoder:
  #         pattern: "{d(%Y-%m-%d %H:%M:%S)} | {({l}):5.5} | {f}:{L} â€” {m}{n}"
  #       policy:
  #         trigger:
  #           kind: size
  #           limit: 30 mb
  #         roller:
  #           kind: fixed_window
  #           pattern: logs/app_{}.log
  #           count: 5
  #           base: 1

  #   root:
  #     level: info
  #     appenders:
  #       - stdout

  #   loggers:
  #     app:
  #       level: info
  #       appenders:
  #         - app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      initContainers:
        - name: init-certs
          image: alpine
          command: 
            - "/bin/sh"
            - "-c"
            - |
              cp /etc/tls/cert-issuer-mqtt/tls.crt /tls-cert/tls.crt
              cp /etc/tls/cert-issuer-mqtt/tls.key /tls-cert/tls.key
          volumeMounts:
            - name: tls
              mountPath: /tls-cert
            - name: certmqtt
              mountPath: /etc/tls/cert-issuer-mqtt
      containers:
      - name: producer
        image: {{ .Values.producer.image }}
        {{- if .Values.debug.pods.alwaysPullContainers }}
        imagePullPolicy: Always
        {{- end }}
        {{- if .Values.debug.pods.sleepInfinity }}
        command: ["/bin/sh"]
        args: ["-c", "chmod +x /app/producer; /app/producer; sleep Infinity;"]
        {{- end }}
        ports:
        - name: amqp
          containerPort: 5672
          protocol: TCP
        {{- if .Values.domains.mqtt.ssl.enable }}
        - name: mqtts
          containerPort: 8883
          protocol: TCP
        {{- else }}
        - name: mqtt
          containerPort: 1883
          protocol: TCP
        {{- end }}
        volumeMounts:
          - name: producer-config
            mountPath: /app/.env
            subPath: .env
            readOnly: true
          # - name: producer-config
          #   mountPath: /app/log4rs.yaml
          #   subPath: log4rs.yaml
          #   readOnly: true
          - name: tls
            mountPath: /tls-cert
      volumes:
        - name: producer-config
          configMap:
            name: producer-config
        - name: certmqtt
          secret:
            secretName: mqtt-tls
        - name: tls
          emptyDir: {}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.producer.serviceName }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: producer
  ports:
    {{- if .Values.domains.mqtt.ssl.enable }}
    # expose mqtts port
    - name: mqtts
      protocol: TCP
      port: 8883
      targetPort: mqtts
    {{- else }}
    # expose mqtt port
    - name: mqtt
      protocol: TCP
      port: 1883
      targetPort: mqtt
    {{- end }}
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: amqp
