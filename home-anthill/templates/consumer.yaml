---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consumer-config
  namespace: {{ .Values.namespace }}
data:
  .env: |-
    MONGO_URI={{ .Values.mongodbUrl }}
    MONGO_DB_NAME=sensors
    AMQP_URI=amqp://{{ .Values.rabbitmq.user }}:{{ .Values.rabbitmq.password }}@rabbitmq.{{ .Values.namespace }}.svc.cluster.local:5672
    AMQP_QUEUE_NAME=ks89
    AMQP_CONSUMER_TAG=consumer
  log4rs.yaml: |-
    appenders:
      stdout:
        kind: console
      file:
        kind: rolling_file
        path: logs/app.log
        encoder:
          pattern: "{d(%Y-%m-%d %H:%M:%S)} | {({l}):5.5} | {f}:{L} â€” {m}{n}"
        policy:
          trigger:
            kind: size
            limit: 30 mb
          roller:
            kind: fixed_window
            pattern: logs/app_{}.log
            count: 5
            base: 1

    root:
      level: info
      appenders:
        - stdout

    loggers:
      file:
        level: info
        appenders:
          - app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
      - name: consumer
        image: {{ .Values.consumer.image }}
        {{- if .Values.debug.pods.alwaysPullContainers }}
        imagePullPolicy: Always
        {{- end }}
        {{- if .Values.debug.pods.sleepInfinity }}
        command: ["/bin/sh"]
        args: ["-c", "chmod +x /app/consumer; /app/consumer; sleep Infinity;"]
        {{- end }}
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: consumer-config
          mountPath: /app/.env
          subPath: .env
          readOnly: true
        - name: consumer-config
          mountPath: /app/log4rs.yaml
          subPath: log4rs.yaml
          readOnly: true
      volumes:
      - name: consumer-config
        configMap:
          name: consumer-config
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.consumer.serviceName }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: consumer
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http