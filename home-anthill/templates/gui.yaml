---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gui-config
  namespace: {{ .Values.namespace }}
data:
  # nginx.conf used by the static web app
  # with proxy_pass to api server
  nginx.conf: |-
    events {
        worker_connections 1024;
    }

    http {
      server_tokens off;
      # IMPORTANT: mime.types are required, otherwise react app
      # won't load SVGs and CSS files in the right way
      include /etc/nginx/mime.types;

      server {
        listen 80;
        listen  [::]:80;
        {{- if .Values.domains.http.name }}
        server_name  {{ .Values.domains.http.name }} www.{{ .Values.domains.http.name }};
        {{- end }}

        location / {
          root /etc/nginx/html/html;
          index  index.html index.htm;
          try_files $uri $uri/ /index.html;
        }

        location /api {
          proxy_pass http://api-server-svc.{{ .Values.namespace }}.svc.cluster.local:80;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_set_header Host            $http_host;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gui
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gui
  template:
    metadata:
      labels:
        app: gui
    spec:
      containers:
      - name: gui
        image: {{ .Values.gui.image }}
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /
            port: http
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: http
          periodSeconds: 60
          failureThreshold: 2
        ports:
          # always enabled to redirect to https
          - name: http
            containerPort: 80
            protocol: TCP
        volumeMounts:
          - name: gui-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
      volumes:
        - name: gui-config
          configMap:
            name: gui-config
---
kind: Service
apiVersion: v1
metadata:
  name: gui-svc
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: gui
  ports:
    # always enabled to redirect to https and for certbot
    - name: http
      protocol: TCP
      port: 80
      targetPort: http