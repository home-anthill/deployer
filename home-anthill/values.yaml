# Default values for home-anthill.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: home-anthill
domainName: "your-domain.com"

domains:
  http: 
    name: "your-domain.com"
    publicIp: "1.2.3.4"
    ssl:
      enable: false
      
  mqtt: 
    name: "mqtt-domain.com"
    publicIp: "9.8.7.6"
    ssl:
      enable: false

letsencrypt:
  email: "your.email@emailexample.com"
  server:
    env: "prod"
    path: "https://acme-v02.api.letsencrypt.org/directory"
  # server:
  #   # attention: if you want to use staging server, you should update CA cert in sensors and devices firmwares,
  #   # because firmwares have the let's encrypt rootCA, but for staging you should use the public cert as CA 
  #   env: "staging"
  #   path: "https://acme-staging-v02.api.letsencrypt.org/directory"

# public MQTT server
mosquitto:
  image: "ks89/mosquitto:v2.0.0"
  dataFolder: "/root/mosquitto-persistence-data"
  auth:
    enable: true
    username: "mosquser"
    password: "Password1!"

# web app
gui:
  image: "ks89/gui:v2.0.0"

apiDevices:
  image: "ks89/api-devices:v1.1.2"
  grpc: 
    libraryLogEnable: false

apiServer:
  image: "ks89/api-server:v1.3.2"
  singleUserLoginEmail: "your.email@emailexample.com"
  jwtPassword: "D%$ZmPh@6WMc$=@!a-pQaa_+?zu4+3iF"
  cookieSecret: "@DbTN*jA"
  oauth2ClientID: "6caa41f023f6205b1c05"
  oauth2SecretID: "5ac42264964d85e4c2e938b4534d02f4d2b8b336"
  grpc: 
    libraryLogEnable: false
  sensors:
    enable: true

mongodbUrl: "mongodb+srv://user:password@cluster0.1234.mongodb.net"

rabbitmq:
  image: "rabbitmq:3-management"
  user: "rabbituser"
  password: "rabbitpassword" # dafauult value, please replace this with your custom valves file

register:
  image: "ks89/register:develop"
  # secret key used by the Rocket Framework
  rocketSecretKey:
    # don't use these in production, please generate your secrets with
    # `openssl rand -base64 32`
    debug: "VQUpMTsnFNA1hniY1fcNN9O2yyuJ43paS6sc4GZX8sM="
    release: "K9hJyBpkTIa06ouMM4EtFKTMMoZc2W6SiBabgbrlDC4="

producer:
  image: "ks89/producer:develop"

consumer:
  image: "ks89/consumer:develop"

online:
  image: "ks89/online:develop"
  # secret key used by the Rocket Framework
  rocketSecretKey:
    # don't use these in production, please generate your secrets with
    # `openssl rand -base64 32`
    debug: "VQUpMTsnFNA1hniY1fcNN9O2yyuJ43paS6sc4GZX8sM="
    release: "K9hJyBpkTIa06ouMM4EtFKTMMoZc2W6SiBabgbrlDC4="

onlineReceiver:
  image: "ks89/online-receiver:develop"

onlineAlarm:
  image: "ks89/online-alarm:develop"
  # secret key used by the Rocket Framework
  rocketSecretKey:
    # don't use these in production, please generate your secrets with
    # `openssl rand -base64 32`
    debug: "VQUpMTsnFNA1hniY1fcNN9O2yyuJ43paS6sc4GZX8sM="
    release: "K9hJyBpkTIa06ouMM4EtFKTMMoZc2W6SiBabgbrlDC4="

# debug configuration, not for production environment
debug:
  pods:
    alwaysPullContainers: true
    # if your pods are crashing, you can enable this to prevent restarts
    # and to access them using your terminal.
    #Â Don't enable this on a production environment!!!
    sleepInfinity: true